global:
  domain: ${domain}

server:
  extraArgs:
    - --insecure
  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
  
  config:
    url: https://${domain}
    repositories: |
      - type: git
        url: https://github.com/${github_org}/${github_repo}
      - type: helm
        name: argo
        url: https://argoproj.github.io/argo-helm
    
    resource.customizations.health.argoproj.io_Application: |
      hs = {}
      hs.status = "Progressing"
      hs.message = ""
      if obj.status ~= nil then
        if obj.status.health ~= nil then
          hs.status = obj.status.health.status
          if obj.status.health.message ~= nil then
            hs.message = obj.status.health.message
          end
        end
      end
      return hs

  rbacConfig:
    policy.default: role:readonly
    policy.csv: |
      g, argocd-admins, role:admin
      g, ${github_org}:${cluster_name}-admins, role:admin

applicationSet:
  enabled: true

dex:
  enabled: false

redis:
  enabled: true

repoServer:
  serviceAccount:
    create: true
    name: argocd-repo-server
    annotations:
      eks.amazonaws.com/role-arn: ${argocd_ecr_role_arn}
  
  env:
    - name: DOCKER_CONFIG
      value: /tmp/.docker
  
  volumes:
    - name: docker-config
      emptyDir: {}
  
  volumeMounts:
    - name: docker-config
      mountPath: /tmp/.docker

controller:
  metrics:
    enabled: true
    serviceMonitor:
      enabled: false

notifications:
  enabled: false